#
# class master::service::smartmon
#
# Storage health monitoring
#

class master::service::smartmon (
    # If $devicescan is true, DEVICESCAN will be set either
    # automatically or from $devicescan_opts (if set).  This will
    # cause all remaining configuration to be ignored
    $devicescan = true,
    $devicescan_opts = undef,

    # Template to use for smartd.conf -- if this is set to false, the
    # file will be unmanaged, so it can be autogenerated if needed
    $smartd_conf_template = 'master/etc/smartd.conf',

    # Template fragments to append to the end of smartd.conf
    $final_templates = [],

    # Lines to append to the end of smartd.conf (these will come after
    # any specified final templates)
    $final_lines = []
){
    package { 'smartmontools': }

    case $::osfamily {
        'Debian': {
            $smartd_conf = '/etc/smartd.conf'
        }
        'RedHat': {
            # RH/CentOS 7 puts smartd.conf in /etc/smartmontools, not
            # /etc, but we generate a compatibility symlink
            if versioncmp($::operatingsystemrelease, '7.0') <= 0 {
                $smartd_conf = '/etc/smartd.conf'
            }
            else {
                $smartd_conf = '/etc/smartmontools/smartd.conf'
            }
        }
        'Suse': {
            $smartd_conf = '/etc/smartd.conf'
        }
        default: {
            fail("${name} is not supported on ${::operatingsystem}")
        }
    }

    if $devicescan_opts {
        $devscan_opts = $devicescan_opts
    }
    else {
        case $::osfamily {
            'Debian': {
                $devscan_opts = '-d removable -n standby -m root -M exec /usr/share/smartmontools/smartd-runner'
            }
            'RedHat': {
                if versioncmp($::operatingsystemrelease, '7.0') <= 0 {
                    $devscan_opts = '-H -m root'
                }
                else {
                    $devscan_opts = '-H -m root -M exec /usr/libexec/smartmontools/smartdnotify -n standby,10,q'
                }
            }
            'Suse': {
                $devscan_opts = '-d removable'
            }
        }
    }

    if $smartd_conf_template {
        templatelayer { $smartd_conf:
            alias    => '/etc/smartd.conf',
            template => $smartd_conf_template,
            notify   => Service['smartd'],
        }
    }

    if $smartd_conf != '/etc/smartd.conf' {
        file { '/etc/smartd.conf':
            ensure  => link,
            target  => $smartd_conf,
            notify  => Service['smartd'],
        }
    }

    service { 'smartd':
        ensure    => running,
        enable    => true,
    }
}
